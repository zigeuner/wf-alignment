//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    out_dir = "output"
    version = false
    fastq = null
    bam = null
    ubam = null
    references = null
    counts = null
    prefix = null
    threads = 4
    sample = null
    sample_sheet = null
    disable_ping = false
    depth_coverage = true
    concat_fastq = true
    process_label = "wfalignment"
    analyse_unclassified = false

    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf,process_label'

    wf {
        example_cmd = [
            "--fastq test_data/fastq",
            "--references test_data/references --counts test_data/counts/ERCC_mix1.csv",
            "--threads 2"
        ]
        container_sha = "shac7ebaf03d514c8e07f2c5ff18bc583cb8b99eef2"
    }
}


manifest {
    name            = 'epi2me-labs/wf-alignment'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-alignment'
    description     = 'Align Nanopore reads and visualize mapping statistics.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    version         = 'v0.3.3'
}

epi2melabs {
    tags = 'alignment,mapping,minimap2'
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wfalignment {
        container = "ontresearch/wf-alignment:${params.wf.container_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    // keep stub conda profile to prevent unknown profile warning so users get a better error
    conda {
        conda.enabled = true
    }


    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfalignment {
                container = "${params.aws_image_prefix}-wf-alignment:${params.wf.container_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }



    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}

timeline {
    enabled = true
    file = "${params.out_dir}/execution/timeline.html"
}
report {
    enabled = true
    file = "${params.out_dir}/execution/report.html"
}
trace {
    enabled = true
    file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
}
