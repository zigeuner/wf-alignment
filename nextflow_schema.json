{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
    "title": "epi2me-labs/wf-alignment",
    "description": "Align Nanopore reads and visualize mapping statistics.",
    "demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-alignment/wf-alignment-demo.tar.gz",
    "url": "https://github.com/epi2me-labs/wf-alignment",
    "type": "object",
    "definitions": {
        "input": {
            "title": "Input Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-right",
            "description": "Parameters for finding and handling input data for analysis.",
            "properties": {
                "fastq": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory with FASTQ files to use in the analysis.",
                    "help_text": "This accepts one of two cases: (i) the path to a top-level directory containing one or more FASTQ files; (ii) the path to a directory containing one level of sub-directories which in turn contain FASTQ files. In the first case, a sample name can be supplied with `--sample`. In the last case, the data is assumed to be multiplexed with the names of the sub-directories as barcodes. In this case, a sample sheet can be provided with `--sample_sheet`."
                },
                "analyse_unclassified": {
                    "type": "boolean",
                    "default": false,
                    "description": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.",
                    "help_text": "If selected and if the input is a multiplex directory the workflow will also process the unclassified directory."
                },
                "bam": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory with BAM files to use in the analysis.",
                    "help_text": "This accepts one of two cases: (i) the path to a top-level directory containing one or more BAM files; (ii) the path to a directory containing one level of sub-directories which in turn contain BAM files. In the first case, a sample name can be supplied with `--sample`. In the last case, the data is assumed to be multiplexed with the names of the sub-directories as barcodes. In this case, a sample sheet can be provided with `--sample_sheet`."
                },
                "ubam": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory with uBAM files to use in the analysis.",
                    "help_text": "This accepts one of two cases: (i) the path to a top-level directory containing one or more uBAM files; (ii) the path to a directory containing one level of sub-directories which in turn contain uBAM files. In the first case, a sample name can be supplied with `--sample`. In the last case, the data is assumed to be multiplexed with the names of the sub-directories as barcodes. In this case, a sample sheet can be provided with `--sample_sheet`."
                },
                "references": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to a directory containing FASTA reference files.",
                    "help_text": "Accepted file extensions are '.fasta', '.fna', '.ffn', '.faa', '.frn', '.fa', '.txt', '.fa.gz', '.fna.gz', '.frn.gz', '.ffn.gz', '.fasta.gz'."
                },
                "counts": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to a CSV file containing expected counts as a control.",
                    "help_text": "The expected counts CSV file must contain columns named 'reference' and 'expected_counts' in order to be valid. the 'reference' column should contain names matching the names of reference sequences within the fasta files provided using --references."
                }
            },
            "required": [
                "references"
            ]
        },
        "samples": {
            "title": "Sample Options",
            "type": "object",
            "fa_icon": "fas fa-vials",
            "description": "Parameters that relate to samples such as sample sheets and sample names.",
            "properties": {
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A CSV file used to map barcodes to sample aliases. The sample sheet can be provided when the input data is a directory containing sub-directories with FASTQ files.",
                    "help_text": "The sample sheet is a CSV file with, minimally, columns named `barcode` and `alias`. Extra columns are allowed. A `type` column is required for certain workflows and should have the following values; `test_sample`, `positive_control`, `negative_control`, `no_template_control`."
                },
                "sample": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files."
                }
            }
        },
        "output": {
            "title": "Output Options",
            "type": "object",
            "fa_icon": "fas fa-arrow-left",
            "description": "Parameters for saving and naming workflow outputs.",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "default": "output",
                    "format": "directory-path",
                    "description": "Directory for output of all workflow results."
                },
                "prefix": {
                    "type": "string",
                    "description": "Optional prefix attached to each of the output filenames.",
                    "help_text": "Output filename format will be `<prefix->filename.ext`."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced options",
            "type": "object",
            "fa_icon": "far fa-question-circle",
            "description": "Advanced options for configuring processes inside the workflow.",
            "help_text": "These advanced options do not need to be changed for typical use, but allow fine tuning of workflows for users who want more control over the workflow.",
            "properties": {
                "depth_coverage": {
                    "type": "boolean",
                    "default": true,
                    "description": "Calculate depth coverage statistics and include in the report.",
                    "help_text": "This step can be a computational bottleneck. Set this to false if your reference sequences are >50mb to speed things up."
                },
                "concat_fastq": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use fastcat to concatenate input FASTQ files.",
                    "help_text": "Set this to false to skip the concatenation step which can take some time, this also assumes your FASTQ headers are in the format output my MinKNOW."
                }
            }
        },
        "misc": {
            "title": "Miscellaneous Options",
            "type": "object",
            "description": "Everything else.",
            "default": "",
            "properties": {
                "threads": {
                    "type": "integer",
                    "default": 4,
                    "description": "Maximum number of CPU threads to use per workflow task.",
                    "help_text": "Several tasks in this workflow benefit from using multiple CPU threads. This option sets the number of CPU threads for all such processes. The total CPU resources used by the workflow are constrained by the executor configuration in `nextflow.config`."
                },
                "memory": {
                    "type": "string",
                    "default": "8.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "description": "memory to allocate for intensive steps like the alignment itself",
                    "help_text": "used directly in the process step specifications"
                },                
                "disable_ping": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable to prevent sending a workflow ping."
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input"
        },
        {
            "$ref": "#/definitions/samples"
        },
        {
            "$ref": "#/definitions/output"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/misc"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "wf-template"
        },
        "aws_image_prefix": {
            "type": "string",
            "hidden": true
        },
        "aws_queue": {
            "type": "string",
            "hidden": true
        },
        "monochrome_logs": {
            "type": "boolean"
        },
        "validate_params": {
            "type": "boolean",
            "default": true
        },
        "show_hidden_params": {
            "type": "boolean"
        }
    },
    "docs": {
        "intro": "## Introduction\n\nThis workflow provides an easy way to align Oxford Nanopore reads and gather mapping\nstats either locally for small amounts of data or at scale in a distributed\nenvironment such as a cluster.\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)\n* [singularity](https://docs.sylabs.io/guides/latest/user-guide/)\n* [minimap2](https://github.com/lh3/minimap2)"
    }
}
